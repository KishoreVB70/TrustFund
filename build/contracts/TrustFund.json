{
  "contractName": "TrustFund",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_benefactor",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "_spender",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "LockDurationSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "SpenderAddressChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getBenefactor",
      "outputs": [
        {
          "internalType": "address",
          "name": "b",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "getSpender",
      "outputs": [
        {
          "internalType": "address",
          "name": "s",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "s",
          "type": "address"
        }
      ],
      "name": "setSpender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_benefactor\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"_spender\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"LockDurationSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"SpenderAddressChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBenefactor\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"b\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSpender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"s\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"s\",\"type\":\"address\"}],\"name\":\"setSpender\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TrustFund.sol\":\"TrustFund\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/TrustFund.sol\":{\"keccak256\":\"0x7d73879493237d3f2e460d42d9b9a540e4957eea35fd99f2165aa11c8bdcdc62\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://048e6aef0620bf5dcd6d20ffad95207c28a1e23eff1aacc1a2d7b076f84b1d3f\",\"dweb:/ipfs/QmXFHzhnHrHJLfeG8KjZ54kH1nNrN9vN22zRajx4x6bScu\"]}},\"version\":1}",
  "bytecode": "0x608060405260405161042638038061042683398101604081905261002291610132565b60003411610090576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f6465706f73697420696e6974616c2066756e6473000000000000000000000000604482015260640160405180910390fd5b60008054600160a060020a03808516600160a060020a03199283161790925560018054928416929091169190911790556100d16401000000006100d8810204565b50506101a5565b6100e6426301dfe200610165565b60028190556040517fe8a8961cffd8b96789b71b359799d4edbe8389d8982198811e6664a0fb460ff490600090a2565b8051600160a060020a038116811461012d57600080fd5b919050565b6000806040838503121561014557600080fd5b61014e83610116565b915061015c60208401610116565b90509250929050565b8082018082111561019f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b92915050565b610272806101b46000396000f3fe608060405234801561001057600080fd5b506004361061005d577c01000000000000000000000000000000000000000000000000000000006000350463334fc2898114610062578063444392091461008b5780637a9717df146100a0575b600080fd5b600154600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b61009e61009936600461020c565b6100b1565b005b600054600160a060020a031661006f565b600054600160a060020a031633146100c857600080fd5b600160a060020a03811661013d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f696e76616c69642061646472657373000000000000000000000000000000000060448201526064015b60405180910390fd5b600054600160a060020a03908116908216036101b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f62656e65666163746f722063616e6e6f74206265207370656e646572000000006044820152606401610134565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383169081179091556040517f15e45b303cd0d73f31b30eb738f24928683d770654d4a2bc92564f239c3452dc90600090a250565b60006020828403121561021e57600080fd5b8135600160a060020a038116811461023557600080fd5b939250505056fea2646970667358221220353da6499a569fb775ba7e905a1a7456564f73c48d1d9e621ef488c91b38f1c964736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005d577c01000000000000000000000000000000000000000000000000000000006000350463334fc2898114610062578063444392091461008b5780637a9717df146100a0575b600080fd5b600154600160a060020a03165b604051600160a060020a03909116815260200160405180910390f35b61009e61009936600461020c565b6100b1565b005b600054600160a060020a031661006f565b600054600160a060020a031633146100c857600080fd5b600160a060020a03811661013d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f696e76616c69642061646472657373000000000000000000000000000000000060448201526064015b60405180910390fd5b600054600160a060020a03908116908216036101b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f62656e65666163746f722063616e6e6f74206265207370656e646572000000006044820152606401610134565b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383169081179091556040517f15e45b303cd0d73f31b30eb738f24928683d770654d4a2bc92564f239c3452dc90600090a250565b60006020828403121561021e57600080fd5b8135600160a060020a038116811461023557600080fd5b939250505056fea2646970667358221220353da6499a569fb775ba7e905a1a7456564f73c48d1d9e621ef488c91b38f1c964736f6c63430008100033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1164:1",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:1",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "82:117:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "92:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "107:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "101:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "101:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "92:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "177:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "186:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "189:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "179:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "179:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "179:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "136:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "147:5:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "162:1:1",
                                        "type": "",
                                        "value": "2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "165:3:1",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "exp",
                                      "nodeType": "YulIdentifier",
                                      "src": "158:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "158:11:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "171:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "154:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "154:19:1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "143:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "143:31:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "133:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "133:42:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "126:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "126:50:1"
                  },
                  "nodeType": "YulIf",
                  "src": "123:70:1"
                }
              ]
            },
            "name": "abi_decode_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "61:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "72:5:1",
                "type": ""
              }
            ],
            "src": "14:185:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "318:211:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "364:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "376:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "366:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "366:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "366:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "339:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "348:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "335:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "335:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "360:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "331:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "331:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "328:52:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "389:58:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "437:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_payable_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "399:37:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:48:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "389:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "456:67:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "508:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "519:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "504:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "504:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_payable_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "466:37:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:57:1"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "456:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_address_payable_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "276:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "287:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "299:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "307:6:1",
                "type": ""
              }
            ],
            "src": "204:325:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "708:170:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "725:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "736:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "718:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "718:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "718:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "759:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "770:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "755:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "775:2:1",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "748:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "748:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "748:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "798:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "809:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "794:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "794:18:1"
                      },
                      {
                        "hexValue": "6465706f73697420696e6974616c2066756e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "814:22:1",
                        "type": "",
                        "value": "deposit inital funds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "787:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "787:50:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "787:50:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "846:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "858:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "869:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "854:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "854:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "846:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f2385a38c5bdf0ca649ae5484a97eb706725de8b50ad2a9f2eafca7b3ae5c61d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "685:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "699:4:1",
                "type": ""
              }
            ],
            "src": "534:344:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "931:231:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "941:16:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "952:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "955:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "948:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "941:3:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "988:168:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1009:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1012:77:1",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1002:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1002:88:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1002:88:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1110:1:1",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1113:4:1",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1103:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1103:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1103:15:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1138:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1141:4:1",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1131:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1131:15:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1131:15:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "972:1:1"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "975:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "969:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:10:1"
                  },
                  "nodeType": "YulIf",
                  "src": "966:190:1"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "914:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "917:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "923:3:1",
                "type": ""
              }
            ],
            "src": "883:279:1"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(exp(2, 160), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_payablet_address_payable_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_payable_fromMemory(headStart)\n        value1 := abi_decode_address_payable_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_f2385a38c5bdf0ca649ae5484a97eb706725de8b50ad2a9f2eafca7b3ae5c61d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"deposit inital funds\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1265:1",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:1",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:1",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:1",
                "type": ""
              }
            ],
            "src": "14:226:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "323:239:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "369:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "378:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "381:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "371:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "371:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "371:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "344:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "353:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "365:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "336:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "333:52:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "394:36:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "420:9:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "407:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "407:23:1"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "398:5:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "452:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "463:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "470:42:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "459:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "459:54:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "449:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "449:65:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "442:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "442:73:1"
                  },
                  "nodeType": "YulIf",
                  "src": "439:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:15:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "551:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "289:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "300:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "312:6:1",
                "type": ""
              }
            ],
            "src": "245:317:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:165:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "758:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "769:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "751:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "751:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "792:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "803:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "788:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "788:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "808:2:1",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "781:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "781:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "781:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "831:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "842:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "827:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "827:18:1"
                      },
                      {
                        "hexValue": "696e76616c69642061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "847:17:1",
                        "type": "",
                        "value": "invalid address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "820:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "820:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "820:45:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "874:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "886:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "897:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "882:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "874:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "718:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "732:4:1",
                "type": ""
              }
            ],
            "src": "567:339:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1085:178:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1102:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1113:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1095:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1095:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1095:21:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1136:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1147:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1132:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1132:18:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1152:2:1",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1125:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:30:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1125:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1175:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1186:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1171:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1171:18:1"
                      },
                      {
                        "hexValue": "62656e65666163746f722063616e6e6f74206265207370656e646572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1191:30:1",
                        "type": "",
                        "value": "benefactor cannot be spender"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1164:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1164:58:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1243:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1254:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1239:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1231:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9e0ffdd9fae383f49b06bade6fc87ad0954505969c4a7e2129c6734069adce1b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1062:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1076:4:1",
                "type": ""
              }
            ],
            "src": "911:352:1"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"invalid address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9e0ffdd9fae383f49b06bade6fc87ad0954505969c4a7e2129c6734069adce1b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"benefactor cannot be spender\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "70:1187:0:-:0;;;407:232;;;;;;;;;;;;;;;;;;:::i;:::-;513:1;501:9;:13;493:46;;;;;;;736:2:1;493:46:0;;;718:21:1;775:2;755:18;;;748:30;814:22;794:18;;;787:50;854:18;;493:46:0;;;;;;;;550:10;:24;;-1:-1:-1;;;;;550:24:0;;;-1:-1:-1;;;;;;550:24:0;;;;;;;;585:18;;;;;;;;;;;;;;;614:17;:15;;;;:17;:::i;:::-;407:232;;70:1187;;647:141;708:27;:15;727:8;708:27;:::i;:::-;693:12;:42;;;751:29;;;;;;;647:141::o;14:185:1:-;101:13;;-1:-1:-1;;;;;143:31:1;;133:42;;123:70;;189:1;186;179:12;123:70;14:185;;;:::o;204:325::-;299:6;307;360:2;348:9;339:7;335:23;331:32;328:52;;;376:1;373;366:12;328:52;399:48;437:9;399:48;:::i;:::-;389:58;;466:57;519:2;508:9;504:18;466:57;:::i;:::-;456:67;;204:325;;;;;:::o;883:279::-;948:9;;;969:10;;;966:190;;;1012:77;1009:1;1002:88;1113:4;1110:1;1103:15;1141:4;1138:1;1131:15;966:190;883:279;;;;:::o;:::-;70:1187:0;;;;;;",
  "deployedSourceMap": "70:1187:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;894:84;963:7;;-1:-1:-1;;;;;963:7:0;894:84;;;-1:-1:-1;;;;;178:55:1;;;160:74;;148:2;133:18;894:84:0;;;;;;;986:262;;;;;;:::i;:::-;;:::i;:::-;;796:90;843:9;868:10;-1:-1:-1;;;;;868:10:0;796:90;;986:262;368:10;;-1:-1:-1;;;;;368:10:0;354;:24;346:33;;;;;;-1:-1:-1;;;;;1068:15:0;::::1;1060:43;;;::::0;::::1;::::0;;769:2:1;1060:43:0::1;::::0;::::1;751:21:1::0;808:2;788:18;;;781:30;847:17;827:18;;;820:45;882:18;;1060:43:0::1;;;;;;;;;1127:10;::::0;-1:-1:-1;;;;;1127:10:0;;::::1;1122:15:::0;;::::1;::::0;1114:56:::1;;;::::0;::::1;::::0;;1113:2:1;1114:56:0::1;::::0;::::1;1095:21:1::0;1152:2;1132:18;;;1125:30;1191;1171:18;;;1164:58;1239:18;;1114:56:0::1;911:352:1::0;1114:56:0::1;1183:7;:11:::0;;-1:-1:-1;;1183:11:0::1;-1:-1:-1::0;;;;;1183:11:0;::::1;::::0;;::::1;::::0;;;1210:30:::1;::::0;::::1;::::0;-1:-1:-1;;1210:30:0::1;986:262:::0;:::o;245:317:1:-;312:6;365:2;353:9;344:7;340:23;336:32;333:52;;;381:1;378;371:12;333:52;420:9;407:23;-1:-1:-1;;;;;463:5:1;459:54;452:5;449:65;439:93;;528:1;525;518:12;439:93;551:5;245:317;-1:-1:-1;;;245:317:1:o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\ncontract TrustFund {\r\n\r\n    address payable private benefactor;\r\n    address payable private spender;\r\n    uint256 private lockDuration;\r\n\r\n    event LockDurationSet(uint indexed);\r\n    event SpenderAddressChanged(address indexed);\r\n\r\n    modifier onlyBenefactor() {\r\n        require(msg.sender == benefactor);\r\n        _;\r\n    }\r\n\r\n    constructor(address payable _benefactor, address payable _spender) payable {\r\n        require(msg.value > 0, \"deposit inital funds\");\r\n        benefactor = _benefactor;\r\n        spender = _spender;\r\n        setLockDuration();\r\n    }\r\n\r\n    function setLockDuration() internal {\r\n       lockDuration = block.timestamp +  52 weeks; \r\n       emit LockDurationSet(lockDuration);\r\n    }\r\n\r\n    function getBenefactor() external view returns(address b){\r\n        b = benefactor;\r\n    }\r\n\r\n    function getSpender() external view returns(address s){\r\n        s = spender;\r\n    }\r\n\r\n    function setSpender(address payable s) external onlyBenefactor {\r\n        require(s != address(0), \"invalid address\");\r\n        require(s != benefactor, \"benefactor cannot be spender\");\r\n\r\n        spender = s;\r\n        emit SpenderAddressChanged(spender);\r\n    }\r\n    \r\n}",
  "sourcePath": "C:\\Users\\user\\Desktop\\vscode\\Trustfund\\contracts\\TrustFund.sol",
  "ast": {
    "absolutePath": "project:/contracts/TrustFund.sol",
    "exportedSymbols": {
      "TrustFund": [
        122
      ]
    },
    "id": 123,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TrustFund",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 122,
        "linearizedBaseContracts": [
          122
        ],
        "name": "TrustFund",
        "nameLocation": "79:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "benefactor",
            "nameLocation": "122:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "98:34:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "98:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 5,
            "mutability": "mutable",
            "name": "spender",
            "nameLocation": "163:7:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "139:31:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "139:15:0",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7,
            "mutability": "mutable",
            "name": "lockDuration",
            "nameLocation": "193:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 122,
            "src": "177:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "177:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "eventSelector": "e8a8961cffd8b96789b71b359799d4edbe8389d8982198811e6664a0fb460ff4",
            "id": 11,
            "name": "LockDurationSet",
            "nameLocation": "220:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11,
                  "src": "236:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "235:14:0"
            },
            "src": "214:36:0"
          },
          {
            "anonymous": false,
            "eventSelector": "15e45b303cd0d73f31b30eb738f24928683d770654d4a2bc92564f239c3452dc",
            "id": 15,
            "name": "SpenderAddressChanged",
            "nameLocation": "262:21:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 15,
                  "src": "284:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "283:17:0"
            },
            "src": "256:45:0"
          },
          {
            "body": {
              "id": 25,
              "nodeType": "Block",
              "src": "335:64:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 18,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "354:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "358:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "354:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 20,
                          "name": "benefactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "368:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "354:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 17,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "346:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "346:33:0"
                },
                {
                  "id": 24,
                  "nodeType": "PlaceholderStatement",
                  "src": "390:1:0"
                }
              ]
            },
            "id": 26,
            "name": "onlyBenefactor",
            "nameLocation": "318:14:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:2:0"
            },
            "src": "309:90:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 52,
              "nodeType": "Block",
              "src": "482:157:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 34,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "501:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "505:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "501:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "513:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "501:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6465706f73697420696e6974616c2066756e6473",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "516:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2385a38c5bdf0ca649ae5484a97eb706725de8b50ad2a9f2eafca7b3ae5c61d",
                          "typeString": "literal_string \"deposit inital funds\""
                        },
                        "value": "deposit inital funds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2385a38c5bdf0ca649ae5484a97eb706725de8b50ad2a9f2eafca7b3ae5c61d",
                          "typeString": "literal_string \"deposit inital funds\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "493:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "493:46:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "493:46:0"
                },
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "benefactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "550:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42,
                      "name": "_benefactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28,
                      "src": "563:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "550:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "550:24:0"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "585:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46,
                      "name": "_spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "595:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "585:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "585:18:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 49,
                      "name": "setLockDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "614:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "614:17:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51,
                  "nodeType": "ExpressionStatement",
                  "src": "614:17:0"
                }
              ]
            },
            "id": 53,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 28,
                  "mutability": "mutable",
                  "name": "_benefactor",
                  "nameLocation": "435:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "419:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30,
                  "mutability": "mutable",
                  "name": "_spender",
                  "nameLocation": "464:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 53,
                  "src": "448:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "418:55:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:0"
            },
            "scope": 122,
            "src": "407:232:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "683:105:0",
              "statements": [
                {
                  "expression": {
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "lockDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "693:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 57,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "708:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "714:9:0",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "708:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3532",
                        "id": 59,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "727:8:0",
                        "subdenomination": "weeks",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_31449600_by_1",
                          "typeString": "int_const 31449600"
                        },
                        "value": "52"
                      },
                      "src": "708:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "693:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 62,
                  "nodeType": "ExpressionStatement",
                  "src": "693:42:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 64,
                        "name": "lockDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "767:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 63,
                      "name": "LockDurationSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "751:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "751:29:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "EmitStatement",
                  "src": "746:34:0"
                }
              ]
            },
            "id": 68,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLockDuration",
            "nameLocation": "656:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "671:2:0"
            },
            "returnParameters": {
              "id": 55,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "683:0:0"
            },
            "scope": 122,
            "src": "647:141:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "853:33:0",
              "statements": [
                {
                  "expression": {
                    "id": 75,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73,
                      "name": "b",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "864:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 74,
                      "name": "benefactor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "868:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "864:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 76,
                  "nodeType": "ExpressionStatement",
                  "src": "864:14:0"
                }
              ]
            },
            "functionSelector": "7a9717df",
            "id": 78,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBenefactor",
            "nameLocation": "805:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 69,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "818:2:0"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "851:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "843:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "842:11:0"
            },
            "scope": 122,
            "src": "796:90:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 87,
              "nodeType": "Block",
              "src": "948:30:0",
              "statements": [
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 83,
                      "name": "s",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "959:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 84,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "963:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "959:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "959:11:0"
                }
              ]
            },
            "functionSelector": "334fc289",
            "id": 88,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSpender",
            "nameLocation": "903:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:2:0"
            },
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "946:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 88,
                  "src": "938:9:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "938:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "937:11:0"
            },
            "scope": 122,
            "src": "894:84:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 120,
              "nodeType": "Block",
              "src": "1049:199:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 96,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1068:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 99,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1081:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 98,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1073:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 97,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1073:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1073:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1068:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c69642061646472657373",
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1085:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
                          "typeString": "literal_string \"invalid address\""
                        },
                        "value": "invalid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_74932fd68ec16402237b05adf133daec827d0040b277e283234f2f607c023225",
                          "typeString": "literal_string \"invalid address\""
                        }
                      ],
                      "id": 95,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1060:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1060:43:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104,
                  "nodeType": "ExpressionStatement",
                  "src": "1060:43:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 106,
                          "name": "s",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 90,
                          "src": "1122:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 107,
                          "name": "benefactor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "1127:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1122:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "62656e65666163746f722063616e6e6f74206265207370656e646572",
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1139:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9e0ffdd9fae383f49b06bade6fc87ad0954505969c4a7e2129c6734069adce1b",
                          "typeString": "literal_string \"benefactor cannot be spender\""
                        },
                        "value": "benefactor cannot be spender"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9e0ffdd9fae383f49b06bade6fc87ad0954505969c4a7e2129c6734069adce1b",
                          "typeString": "literal_string \"benefactor cannot be spender\""
                        }
                      ],
                      "id": 105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1114:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:56:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:56:0"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1183:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 113,
                      "name": "s",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 90,
                      "src": "1193:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1183:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1183:11:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 117,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "1232:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 116,
                      "name": "SpenderAddressChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "1210:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 119,
                  "nodeType": "EmitStatement",
                  "src": "1205:35:0"
                }
              ]
            },
            "functionSelector": "44439209",
            "id": 121,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 93,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 92,
                  "name": "onlyBenefactor",
                  "nameLocations": [
                    "1034:14:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 26,
                  "src": "1034:14:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1034:14:0"
              }
            ],
            "name": "setSpender",
            "nameLocation": "995:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 90,
                  "mutability": "mutable",
                  "name": "s",
                  "nameLocation": "1022:1:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 121,
                  "src": "1006:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 89,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1005:19:0"
            },
            "returnParameters": {
              "id": 94,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1049:0:0"
            },
            "scope": 122,
            "src": "986:262:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 123,
        "src": "70:1187:0",
        "usedErrors": []
      }
    ],
    "src": "35:1222:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.16+commit.07a7930e.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0x73266D927c8cCac079a660F37890ce8C5E9Ca74c",
      "transactionHash": "0xc801cf526b9f122639435c3fcfb9f64215a9eb808caefe404c6cdbb0c7439a84"
    }
  },
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-16T15:26:34.747Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}